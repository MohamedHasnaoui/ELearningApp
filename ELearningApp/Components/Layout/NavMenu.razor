@implements IDisposable

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<aside class="sidebar">
    <!-- sidebar close btn -->
    <button type="button" class="sidebar-close-btn text-gray-500 hover-text-white hover-bg-main-600 text-md w-24 h-24 border border-gray-100 hover-border-main-600 d-xl-none d-flex flex-center rounded-circle position-absolute"><i class="ph ph-x"></i></button>
    <!-- sidebar close btn -->

    <a href="index.html" class="sidebar__logo text-center p-20 position-sticky inset-block-start-0 bg-white w-100 z-1 pb-10">
        <img src="assets/images/logo/logo.png" alt="Logo">
    </a>

    <div class="sidebar-menu-wrapper overflow-y-auto scroll-sm">
        <div class="p-20 pt-10">
            <ul class="sidebar-menu">
                @if (isAuthenticated)
                {
                    <li class="sidebar-menu__item">
                        <a href="/" class="sidebar-menu__link">
                            <span class="icon"><i class="ph ph-squares-four"></i></span>
                            <span class="text">Dashboard</span>
                        </a>
                    </li>
                }
                <li class="sidebar-menu__item has-dropdown">
                    <a href="javascript:void(0)" class="sidebar-menu__link">
                        <span class="icon"><i class="ph ph-graduation-cap"></i></span>
                        <span class="text">Courses</span>
                    </a>
                    <!-- Submenu start -->
                    <ul class="sidebar-submenu">
                        <li class="sidebar-submenu__item">
                            <NavLink href="/courses/etudiant/decouvrir" class="sidebar-submenu__link">Decouvrir</NavLink>
                        </li>
                        @if (isEtudiant)
                        {
                            <li class="sidebar-submenu__item">
                                <NavLink href="/courses/etudiant/started" class="sidebar-submenu__link"> Student Courses </NavLink>
                            </li>
                        }
                        @if (isEnseignant)
                        {
                            <li class="sidebar-submenu__item">
                                <NavLink href="/courses/enseignant/mycourses" class="sidebar-submenu__link"> My Courses </NavLink>
                            </li>
                            <li class="sidebar-submenu__item">
                                <NavLink href="/courses/enseignant/create" class="sidebar-submenu__link"> Create Course </NavLink>
                            </li>
                        }
                    </ul>
                    <!-- Submenu End -->
                </li>

                <li class="sidebar-menu__item">
                    <a href="https://stripe.com/" target="_blank" class="sidebar-menu__link">
                        <img class="rounded-circle"
                        src="assets/images/icons/stripe.jpeg"
                        alt="icon"
                        style="width: 30px; height: 30px;" />
                        <span class="text text-sm ">Payment par Stripe</span>
                    </a>
                </li>
                <li class="sidebar-menu__item ">
                    <a href="/Etudiants" class="sidebar-menu__link">
                        <span class="icon"><i class="ph ph-users-three"></i></span>
                        <span class="text">Students</span>
                    </a>
                </li>
                @if (isEnseignant)
                {
                    <li class="sidebar-menu__item">
                        <NavLink href="/mesEtudiants" class="sidebar-menu__link">
                            <span class="icon"><i class="ph ph-users-three"></i></span>
                            <span class="text">Mes Etudiants</span>
                        </NavLink>
                    </li>
                }
                <li class="sidebar-menu__item">
                    <a href="/Enseignant" class="sidebar-menu__link">
                        <span class="icon"><i class="ph ph-users"></i></span>
                        <span class="text">Mentors</span>
                    </a>
                </li>
                @if (!isEnseignant)
                {
                    <li class="sidebar-menu__item">
                        <NavLink href="/AbonnementPage" class="sidebar-menu__link">
                            <span class="icon"><i class="ph ph-coins"></i></span>
                            <span class="text">Pricing</span>
                        </NavLink>
                    </li>
                }
                <li class="sidebar-menu__item">
                    <hr />
                </li>
                @if (isAuthenticated && AuthenticatedUser != null)
                {
                    <li class="sidebar-menu__item">
                        <a href="/Profile" class="sidebar-menu__link">
                            <span class="icon"><i class="ph ph-gear"></i></span>
                            <span class="text">Account Settings</span>
                        </a>
                    </li>
                    <li class="sidebar-menu__item">
                        <form action="Account/Logout" method="post" class="py-12 px-20 hover-bg-danger-50 text-gray-300 hover-text-danger-600 rounded-8 flex-align gap-8 fw-medium">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="d-flex align-items-center gap-8 text-15 text-gray-300 hover-text-danger-600">
                                <span class="text-2xl text-danger-600 d-flex"><i class="ph ph-sign-out"></i></span>
                                <span class="text">Log Out</span>
                            </button>
                        </form>
                    </li>
                }
                @if (!isAuthenticated)
                {
                    <li class="sidebar-menu__item has-dropdown">
                        <a href="javascript:void(0)" class="sidebar-menu__link">
                            <span class="icon"><i class="ph ph-shield-check"></i></span>
                            <span class="text">Login</span>
                        </a>
                        <!-- Submenu start -->
                        <ul class="sidebar-submenu">
                            <li class="sidebar-submenu__item">
                                <a href="/Login" class="sidebar-submenu__link">Sign In</a>
                            </li>
                            <li class="sidebar-submenu__item">
                                <a href="/Register" class="sidebar-submenu__link">Sign Up</a>
                            </li>
                        </ul>
                        <!-- Submenu End -->
                    </li>
                }

            </ul>
        </div>
        <div class="p-20 pt-80">
            <div class="bg-main-50 p-20 pt-0 rounded-16 text-center mt-74">
                <span class="border border-5 bg-white mx-auto border-primary-50 w-114 h-114 rounded-circle flex-center text-success-600 text-2xl translate-n74">
                    <img src="assets/images/icons/certificate.png" alt="" class="centerised-img">
                </span>
                <div class="mt-n74">
                    <h5 class="mb-4 mt-22">Get Pro Certificate</h5>
                    <p class="">Explore 400+ courses with lifetime members</p>
                    <a href="/AbonnementPage" class="btn btn-main mt-16 rounded-pill">Get Access</a>
                </div>
            </div>
        </div>
    </div>

</aside>

@code {
    private string? currentUrl;
    [Parameter]
    public ApplicationUser? AuthenticatedUser { get; set; }
    private bool isAdmin;
    private bool isEnseignant;
    private bool isEtudiant;
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        // Get the authentication state
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Check if the user is in the "Admin" role
        isAdmin = user.IsInRole("Admin");
        isEnseignant = user.IsInRole("Enseignant");
        isEtudiant = user.IsInRole("Etudiant");
        isAuthenticated = user.Identity.IsAuthenticated;
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }


    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

