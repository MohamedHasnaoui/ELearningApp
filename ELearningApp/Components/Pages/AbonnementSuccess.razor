@page "/success"
@rendermode InteractiveServer

@layout ELearningApp.Components.Layout.EmptyLayout
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="alert alert-success text-center">
    <p><strong>Merci Pour Votre Confiance</strong></p>
</div>

<div class="text-center">
    <button class="btn btn-primary" @onclick="CallWebhook">Compléter le paiment</button>

</div>

@code {
    // Récupérer l'ID et le prix de la chaîne de requête
    private int abonnementId;

    protected override  void OnInitialized()
    {
        // Récupérer l'URL actuelle
        var uri = Navigation.Uri;

        // Extraire les paramètres de la requête (query string)
        var uriQuery = new Uri(uri).Query;
        var queryDictionary = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uriQuery);

        // Vérifier si le paramètre "abonnementId" existe et le convertir en int
        if (queryDictionary.TryGetValue("abonnementId", out var id) && int.TryParse(id, out var parsedId))
        {
            abonnementId = parsedId;
        }
        else
        {
            // Gérer le cas où l'id n'est pas valide ou inexistant
            Console.WriteLine("Paramètre abonnementId manquant ou invalide.");
        }

        //await CallWebhook();


    }


 

    private async Task CallWebhook()
    {
        try
        {
            if(abonnementId>0){
                // Utiliser l'Id récupéré pour envoyer au webhook
                var requestData = new
                {
                    IdEtudiant = "c01e4948-a16a-4253-c01e4948-a16a-4253-b29e-c01e4948-a16a-4253-b29e-213e390d2481", // Remplacer par l'id réel
                    IdAbonnement = abonnementId // Utiliser l'ID récupéré de la requête
                };

                // Effectuer la requête HTTP POST
                var response = await Http.PostAsJsonAsync("https://localhost:7134/api/payment/webhook", requestData);

                if (response.IsSuccessStatusCode)
                {
                    // Traitez la réponse si nécessaire
                    Console.WriteLine("Payment processed successfully.");
                    Navigation.NavigateTo("/");
                }
                else
                {
                    Console.WriteLine("Failed to process payment.");
                }
            }
            
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors de l'appel au webhook : {ex.Message}");
        }
    }
}
