@inject ICoursService CoursService
@inject IEnseignantService EnseignantService

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer


<div class="dashboard-body">

    <div class="row gy-4">
        <div class="col-lg-9">
            <!-- Widgets Start -->
            <div class="row gy-3">
                <div class="col-12 col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="mb-2">@TotalCours+</h4>
                            <span class="text-gray-600">Total Cours</span>
                            <div class="flex-between gap-8 mt-16">
                                <span class="flex-shrink-0 w-48 h-48 flex-center rounded-circle bg-main-600 text-white text-2xl"><i class="ph-fill ph-book-open"></i></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="mb-2">@TotalEvaluations+</h4>
                            <span class="text-gray-600">Total Evaluation</span>
                            <div class="flex-between gap-8 mt-16">
                                <span class="flex-shrink-0 w-48 h-48 flex-center rounded-circle bg-purple-600 text-white text-2xl"> <i class="ph-fill ph-graduation-cap"></i></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="mb-2">@TotalEtudiants+</h4>
                            <span class="text-gray-600">Total Etudiant</span>
                            <div class="flex-between gap-8 mt-16">
                                <span class="flex-shrink-0 w-48 h-48 flex-center rounded-circle bg-warning-600 text-white text-2xl"><i class="ph-fill ph-users-three"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Widgets End -->

            <!-- Top Course Start -->
            @*             <div class="card mt-24">
                <div class="card-body">
                    <div class="mb-20 flex-between flex-wrap gap-8">
                        <h4 class="mb-0">Study Statistics</h4>
                        <div class="flex-align gap-16 flex-wrap">
                            <div class="flex-align flex-wrap gap-16">
                                <div class="flex-align flex-wrap gap-8">
                                    <span class="w-8 h-8 rounded-circle bg-main-600"></span>
                                    <span class="text-13 text-gray-600">Study</span>
                                </div>
                                <div class="flex-align flex-wrap gap-8">
                                    <span class="w-8 h-8 rounded-circle bg-main-two-600"></span>
                                    <span class="text-13 text-gray-600">Test</span>
                                </div>
                            </div>
                            <select class="form-select form-control text-13 px-8 pe-24 py-8 rounded-8 w-auto">
                                <option value="1">Yearly</option>
                                <option value="1">Monthly</option>
                                <option value="1">Weekly</option>
                                <option value="1">Today</option>
                            </select>
                        </div>
                    </div>


                </div>
            </div>


 *@         

            <!--Mes Top Cours-->

            <div class="dashboard-body bg-white card border  mt-24 ">
                <!-- Titre ajouté au-dessus du champ de filtre -->
                <h4 class="mb-4">Statistiques de Top 5 Cours</h4>

                <div class="breadcrumb-with-buttons mb-24 flex-between flex-wrap gap-8  p-4">
                    <div class="flex-align gap-8 flex-wrap">
                        <div class="position-relative text-gray-500 flex-align gap-4 text-13">
                            <span class="text-inherit">Ordonner par: </span>
                            <div class="flex-align text-gray-500 text-13 border border-gray-100 rounded-4 ps-20 focus-border-main-600 bg-white">
                                <span class="text-lg"><i class="ph ph-funnel-simple"></i></span>
                                <select id="statusFilter" class="form-control ps-8 pe-20 py-16 border-0 text-inherit rounded-4 text-center" @onchange="OnSortOptionChanged">
                                    <option value="all">Tous</option>
                                    <option value="evaluation">Evaluation</option>
                                    <option value="etudiants">Etudiants</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                @if (isLoading)
                {
                    <p>Chargement en cours...</p>
                }
                else if (topCours != null && topCours.Any())
                {
                    <div class="card overflow-hidden">
                        <div class="card-body p-0">


                            <!-- Table avec bordure ajoutée -->
                            <table id="assignmentTable" class="table table-striped border border-gray-100 rounded-4  ">
                                <thead class="border border-gray-100 rounded-4">
                                    <tr>
                                        <th style="width: 25%; text-align: center;">Cours</th>
                                        <th style="width: 25%; text-align: center;">Catégorie</th>
                                        <th style="width: 25%; text-align: center;">Evaluations</th>
                                        <th style="width: 25%; text-align: center;">Etudiants Inscrits</th>
                                    </tr>
                                </thead>
                                <tbody class="border border-gray-100 rounded-4">
                                    @foreach (var cours in topCours)
                                    {
                                        <tr>
                                            <td style="text-align: center;">
                                                <span class="h6 mb-0 fw-medium text-gray-300">@cours.Nom</span>
                                            </td>
                                            <td style="text-align: center;">
                                                <span class="h6 mb-0 fw-medium text-gray-300">@cours.Category</span>
                                            </td>
                                            <td style="text-align: center;">
                                                <span class="text-13 py-2 px-8 bg-teal-50 text-teal-600 d-inline-flex align-items-center gap-8 rounded-pill">
                                                    <i class="ph-fill ph-star"></i>
                                                    @cours.Evaluation
                                                </span>
                                            </td>
                                            <td style="text-align: center;">
                                                <span class="text-13 py-2 px-8 bg-teal-50 text-teal-600 d-inline-flex align-items-center gap-8 rounded-pill">
                                                    <span class="w-6 h-6 bg-teal-600 rounded-circle flex-shrink-0"></span>
                                                    @cours.NombreEtudiants
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <p>Aucun cours trouvé pour cet enseignant.</p>
                }
            </div>
            <div class="card border dashboard-body  mt-24 p-6">
                <ChartEtudiant />

            </div>

 <!-- Top Course End -->
            <!-- Top Course Start -->
            <div class="card mt-24">
                <div class="card-body">
                    <div class="mb-20 flex-between flex-wrap gap-8">
                        <h4 class="mb-0">Your Top 3 Rated courses</h4>
                        <NavLink href="/courses/enseignant/mycourses" class="text-13 fw-medium text-main-600 hover-text-decoration-underline">See All</NavLink>
                    </div>

                    <div class="row g-20">
                        @foreach (var c in Top3cours){
                            <Top_3_course_card categoryStyle="@categoryStyle[count++%5]" coursimg="@c.CoursImg" coursId="@c.Id" Category="@c.Category.Name" CoursTitle="@c.Nom" Duree="@c.FormatDuration()" Rating="@c.Evaluation" />
                        }
                    </div>
                </div>
            </div>
            <!-- Top Course End -->
        </div>

        <div class="col-lg-3">
            <!-- Calendar Start -->
            <div class="card">
                <div class="card-body">
                    <div class="calendar">
                        <div class="calendar__header">
                            <button type="button" class="calendar__arrow left"><i class="ph ph-caret-left"></i></button>
                            <p class="display h6 mb-0">""</p>
                            <button type="button" class="calendar__arrow right"><i class="ph ph-caret-right"></i></button>
                        </div>

                        <div class="calendar__week week">
                            <div class="calendar__week-text">Su</div>
                            <div class="calendar__week-text">Mo</div>
                            <div class="calendar__week-text">Tu</div>
                            <div class="calendar__week-text">We</div>
                            <div class="calendar__week-text">Th</div>
                            <div class="calendar__week-text">Fr</div>
                            <div class="calendar__week-text">Sa</div>
                        </div>
                        <div class="days"></div>
                    </div>
                </div>
            </div>
            <!-- Calendar End -->
            <!-- Assignment Start -->
            <div class="card mt-24">
                <div class="card-body">
                    <div class="mb-20 flex-between flex-wrap gap-8">
                        <h4 class="mb-0">Assignments</h4>
                        <a href="assignment.html" class="text-13 fw-medium text-main-600 hover-text-decoration-underline">See All</a>
                    </div>
                    <div class="p-xl-4 py-16 px-12 flex-between gap-8 rounded-8 border border-gray-100 hover-border-gray-200 transition-1 mb-16">
                        <div class="flex-align flex-wrap gap-8">
                            <span class="text-main-600 bg-main-50 w-44 h-44 rounded-circle flex-center text-2xl flex-shrink-0"><i class="ph-fill ph-graduation-cap"></i></span>
                            <div>
                                <h6 class="mb-0">Do The Research</h6>
                                <span class="text-13 text-gray-400">Due in 9 days</span>
                            </div>
                        </div>
                        <a href="assignment.html" class="text-gray-900 hover-text-main-600"><i class="ph ph-caret-right"></i></a>
                    </div>
                    <div class="p-xl-4 py-16 px-12 flex-between gap-8 rounded-8 border border-gray-100 hover-border-gray-200 transition-1 mb-16">
                        <div class="flex-align flex-wrap gap-8">
                            <span class="text-main-600 bg-main-50 w-44 h-44 rounded-circle flex-center text-2xl flex-shrink-0"><i class="ph ph-code"></i></span>
                            <div>
                                <h6 class="mb-0">PHP Dvelopment</h6>
                                <span class="text-13 text-gray-400">Due in 2 days</span>
                            </div>
                        </div>
                        <a href="assignment.html" class="text-gray-900 hover-text-main-600"><i class="ph ph-caret-right"></i></a>
                    </div>
                    <div class="p-xl-4 py-16 px-12 flex-between gap-8 rounded-8 border border-gray-100 hover-border-gray-200 transition-1">
                        <div class="flex-align flex-wrap gap-8">
                            <span class="text-main-600 bg-main-50 w-44 h-44 rounded-circle flex-center text-2xl flex-shrink-0"><i class="ph ph-bezier-curve"></i></span>
                            <div>
                                <h6 class="mb-0">Graphic Design</h6>
                                <span class="text-13 text-gray-400">Due in 5 days</span>
                            </div>
                        </div>
                        <a href="assignment.html" class="text-gray-900 hover-text-main-600"><i class="ph ph-caret-right"></i></a>
                    </div>
                </div>
            </div>
            <!-- Assignment End -->
            <!-- Progress Bar Start -->
            <div class="card mt-24">
                <div class="card-header border-bottom border-gray-100">
                    <h5 class="mb-0">My Progress</h5>
                </div>
                <div class="card-body">
                    <div id="radialMultipleBar"></div>

                    <div class="">
                        <h6 class="text-lg mb-16 text-center"> <span class="text-gray-400">Total hour:</span> 6h 32 min</h6>
                        <div class="flex-between gap-8 flex-wrap">
                            <div class="flex-align flex-column">
                                <h6 class="mb-6">60/60</h6>
                                <span class="w-30 h-3 rounded-pill bg-main-600"></span>
                                <span class="text-13 mt-6 text-gray-600">Completed</span>
                            </div>
                            <div class="flex-align flex-column">
                                <h6 class="mb-6">60/60</h6>
                                <span class="w-30 h-3 rounded-pill bg-main-two-600"></span>
                                <span class="text-13 mt-6 text-gray-600">Completed</span>
                            </div>
                            <div class="flex-align flex-column">
                                <h6 class="mb-6">60/60</h6>
                                <span class="w-30 h-3 rounded-pill bg-gray-500"></span>
                                <span class="text-13 mt-6 text-gray-600">Completed</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Progress bar end -->
        </div>

    </div>
</div>

@code {
    private string? EnseignantId;
    private List<TopCoursDto>? topCours;
    List<Cours> Top3cours = new();
    private bool isLoading = true;
    private int TotalCours;
    private int TotalEtudiants;
    private double TotalEvaluations;
    private string? ErrorMessage;
    private string sortOption = "evaluation"; // Variable to hold the selected sorting option

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity != null && user.Identity.IsAuthenticated)
            {
                EnseignantId = user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

                if (!string.IsNullOrEmpty(EnseignantId))
                {
                    isLoading = true;
                    topCours = await CoursService.GetTop5EvaluationCoursByEnseignantAsync(EnseignantId);
                    Top3cours = await CoursService.GetTop3RatedCoursByEnseignantIdAsync(EnseignantId);
                    topCours = await CoursService.GetTop5CoursByEnseignantAsync(EnseignantId);

                if (topCours == null || topCours.Count == 0)
                {
                    Console.WriteLine("Aucun cours trouvé pour cet enseignant.");
                }

                // Récupérer les statistiques pour l'enseignant connecté
                var stats = await EnseignantService.GetEnseignantStatsAsync(EnseignantId);

                if (stats != default) // Vérification correcte pour un tuple
                {
                    TotalCours = stats.totalCours;
                    TotalEtudiants = stats.totalEtudiants;
                    TotalEvaluations = stats.totalEvaluations;
                }
                else
                {
                    ErrorMessage = "Impossible de récupérer les statistiques de l'enseignant.";
                }
    }
   
            else
            {
                Console.WriteLine("Utilisateur non authentifié.");
            }
     
                    
       
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Une erreur s'est produite : {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    // Method to handle the sorting option change
    private async Task OnSortOptionChanged(ChangeEventArgs e)
    {
        sortOption = e.Value.ToString();
        await SortCours();
    }


    // Method to sort the courses based on the selected option
    private async Task SortCours()
    {
        if (topCours != null)
        {
            if (sortOption == "evaluation")
            {
                topCours = await CoursService.GetTop5EvaluationCoursByEnseignantAsync(EnseignantId);
            }
            else if (sortOption == "etudiants")
            {
                topCours = await CoursService.GetTop5NbEtudinatCoursByEnseignantAsync(EnseignantId);
            }

            StateHasChanged(); // Forcer la mise à jour de l'interface après le tri
        }
            StateHasChanged(); // Forcer la mise à jour de l'interface après le tri
        }

        Console.WriteLine("Après le tri:");
        PrintCours(topCours); // Log the courses after sorting
    }
    int count = 0;
    private string[] categoryStyle = { "bg-purple-50 text-purple-600",
                                       "bg-success-50 text-success-600",
                                       "bg-warning-50 text-warning-600",
                                       "bg-info-50 text-info-600",
                                       "bg-danger-50 text-danger-600",
        }
}

</script>